{
  "swagger": "2.0",
  "info": {
    "title": "UiTPAS Admin",
    "description": "An administration interface fot UiTPAS, a system to manage users and activities of cultural offers in the Flanders region. Most operations require that you authenticate first with your UiTID.",
    "version": "3.0.0",
    "contact": {
      "name": "CultuurNet Vlaanderen vzw",
      "url": "http://www.uitpas.be",
      "email": "info@uitdatabank.be"
    }
  },
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/culturefeed/oauth/connect": {
      "get": {
        "summary": "View the details of a specific cultural event.",
        "operationId": "oauthConnect",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "destination",
            "in": "query",
            "description": "The path to redirect to when the operation is complete.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to the OAuth service which redirects to the destination path."
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/uitid/user": {
      "get": {
        "summary": "Retrieve all information about the current user.",
        "description": "Authentication is required.",
        "operationId": "getUserInformation",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The infoformation available about the current user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "The user is not authenticated."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/uitid/logout": {
      "get": {
        "summary": "Log the current user out.",
        "description": "Authentication is required.",
        "operationId": "userLogout",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The user is logged out."
          },
          "403": {
            "description": "Someone tried to log out when no one was logged in."
          },
          "500": {
            "description": "An error the first time someone tries to log out when no one is logged in."
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/counters": {
      "get": {
        "summary": "Get a list of counters.",
        "description": "Authentication is required.",
        "operationId": "listCounters",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of counters to which the current user is assigned.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Counter"
              }
            }
          },
          "403": {
            "description": "The user is not authenticated."
          }
        },
        "tags": [
          "Counter"
        ]
      }
    },
    "/counters/active": {
      "get": {
        "summary": "Get the active counter.",
        "description": "Authentication is required.",
        "operationId": "getActiveCounter",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The counter currently active for the current user.",
            "schema": {
              "$ref": "#/definitions/Counter"
            }
          },
          "403": {
            "description": "The user is not authenticated."
          },
          "404": {
            "description": "The user does not have an active counter.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Counter"
        ]
      },
      "post": {
        "summary": "Set the active counter.",
        "description": "Authentication is required.",
        "operationId": "setActiveCounter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the id of the counter to set as active for the current user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postObjectWithCounterId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The counter that has been set active.",
            "schema": {
              "$ref": "#/definitions/Counter"
            }
          },
          "403": {
            "description": "The user is not authenticated."
          },
          "404": {
            "description": "The user does not have a counter with the given id."
          }
        },
        "tags": [
          "Counter"
        ]
      }
    },
    "/identities/{identificationNumber}": {
      "get": {
        "summary": "Find an identity by identification number. An identity is a combination of an UiTPAS and its owner (an individual or a group).",
        "description": "Authentication and active counter is required.",
        "operationId": "identify",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "identificationNumber",
            "in": "path",
            "description": "The identification number to search the identity with.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The information about the identity.",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          },
          "403": {
            "description": "The user is not authenticated or has no active counter."
          },
          "404": {
            "description": "No identity found with this identification.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Identity",
          "UiTPAS",
          "PassHolder"
        ]
      }
    },
    "/uitpas/{uitpasNumber}/price": {
      "get": {
        "summary": "Retrieve the price to register the specified uitpas.",
        "operationId": "getPrice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason for the UiTPAS purchase.",
            "required": true,
            "type": "string",
            "enum": [
              "FIRST_CARD",
              "CARD_UPGRADE",
              "EXTRA_CARD",
              "LOSS_THEFT",
              "REMOVAL",
              "LOSS_KANSENSTATUUT",
              "OBTAIN_KANSENSTATUUT"
            ]
          },
          {
            "name": "date_of_birth",
            "in": "query",
            "description": "Date of birth of the passholder.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "postal_code",
            "in": "query",
            "description": "Postal code of the passholder.",
            "required": false,
            "type": "string"
          },
          {
            "name": "voucher_number",
            "in": "query",
            "description": "Voucher number of the passholder.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A price object.",
            "schema": {
              "$ref": "#/definitions/UiTPASPrice"
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "UiTPAS"
        ]
      }
    },
    "/passholders/{uitpasNumber}": {
      "get": {
        "summary": "Find a passholder by uitpas number.",
        "description": "Authentication and active counter is required.",
        "operationId": "getPassHolder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The information about the passholder.",
            "schema": {
              "$ref": "#/definitions/PassHolder"
            }
          },
          "403": {
            "description": "The user is not authenticated or has no active counter."
          },
          "404": {
            "description": "No passholder found with this identification.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "PassHolder"
        ]
      },
      "patch": {
        "summary": "Update a passholder.",
        "description": "Authentication and active counter is required.",
        "operationId": "updatePassHolder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the passholder info to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PassHolderUpdateCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The information about the passholder.",
            "schema": {
              "$ref": "#/definitions/PassHolder"
            }
          },
          "400": {
            "description": "Invalid uitpas number used.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "The user is not authenticated or has no active counter, or does not have permission to update the passholder."
          }
        },
        "tags": [
          "PassHolder"
        ]
      },
      "put": {
        "summary": "Register a passholder.",
        "description": "Authentication and an active counter are required. The uitpas number should not be linked to a passholder.",
        "operationId": "registerPassholder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "the uitpas number of an unregistered uitpas.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "A collection of registration info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The newly created passholder.",
            "schema": {
              "$ref": "#/definitions/PassHolder"
            }
          },
          "400": {
            "description": "The uitpas number is already in use."
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "PassHolder"
        ]
      }
    },
    "/passholders/{uitpasNumber}/advantages": {
      "get": {
        "summary": "Find all exchangeable advantages for a passholder.",
        "description": "Authentication and active counter is required.",
        "operationId": "getExchangeableAdvantages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of exchangeable advantages for the passholder.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Advantage"
              }
            }
          },
          "403": {
            "description": "The user is not authenticated or has no active counter.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "PassHolder",
          "Advantage"
        ]
      }
    },
    "/passholders/{uitpasNumber}/advantages/{advantageId}": {
      "get": {
        "summary": "Find an advantage for a passholder by uitpas number of the passholder and the advantage's id.",
        "description": "Authentication and active counter is required.",
        "operationId": "getAdvantage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "advantageId",
            "in": "path",
            "description": "The id of the advantage.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The information about the advantage.",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "403": {
            "description": "The user is not authenticated or has no active counter.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No advantage found with this id.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "PassHolder",
          "Advantage"
        ]
      }
    },
    "/passholders/{uitpasNumber}/advantages/exchanges": {
      "post": {
        "summary": "Exchange an advantage for a given passholder.",
        "description": "Authentication is required.",
        "operationId": "exchangeAdvantage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the id of the advantage to exchange for the passholder.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postObjectWithAdvantageId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The advantage that has been exchanged.",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "The advantage is not exchangeable for the given passholder.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No advantage found for the given id and passholder.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "PassHolder",
          "Advantage"
        ]
      }
    },
    "/passholders/{uitpasNumber}/activities": {
      "get": {
        "summary": "Retrieves a list of activities.",
        "description": "Authentication and an active counter are required.",
        "operationId": "getActivities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Free search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_type",
            "in": "query",
            "description": "Date range filter.",
            "required": false,
            "type": "string",
            "enum": [
              "today",
              "next_7_days",
              "next_30_days",
              "next_12_months",
              "past"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Which page of the result set to show. When omitted this defaults to 1 (the first page).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many items should be listed per page. When omitted this defaults to 5.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The information available about the activities.",
            "schema": {
              "$ref": "#/definitions/PagedActivityCollection"
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "Activity",
          "PassHolder"
        ]
      }
    },
    "/passholders/{uitpasNumber}/activities/checkins": {
      "post": {
        "summary": "Checkin a passholder.",
        "description": "Authentication and an active counter are required.",
        "operationId": "checkinPassholder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the checkin info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PassHolderCheckinCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The activity with updated check-in constraints.",
            "schema": {
              "$ref": "#/definitions/Activity"
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "Activity",
          "PassHolder"
        ]
      }
    },
    "/passholders/{uitpasNumber}/activities/ticket-sales": {
      "post": {
        "summary": "Sell a ticket to a passholder.",
        "description": "Authentication and an active counter are required.",
        "operationId": "sellTicketToPassholder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the ticket sale info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterTicketSaleCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The registered ticket sale.",
            "schema": {
              "$ref": "#/definitions/TicketSale"
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "Activity",
          "PassHolder"
        ]
      }
    },
    "/passholders/{uitpasNumber}/kansenstatuten/{cardSystemId}": {
      "patch": {
        "summary": "Change specific information of a kansenstatuut.",
        "description": "Authentication and an active counter with kansenstatuut authorisation is required",
        "operationId": "updateKansenstatuut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uitpasNumber",
            "in": "path",
            "description": "The uitpas number of the passholder.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cardSystemId",
            "in": "path",
            "description": "The card system ID that is linked to the kansenstatuut you want to edit",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the kansenstatuut info that you want to change",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KansenstatuutUpdateCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The registered has been updated."
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter with kansenstatuut permissions."
          }
        },
        "tags": [
          "Kansenstatuut",
          "PassHolder"
        ]
      }
    },
    "/checkindevices": {
      "get": {
        "summary": "List checkin devices.",
        "description": "Authentication and an active counter are required.",
        "operationId": "getCheckInDevices",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of available checkin devices.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckInDevice"
              }
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "CheckIn devices"
        ]
      }
    },
    "/checkindevices/{checkInDeviceId}": {
      "patch": {
        "summary": "Connect the CheckIn Device to an activity.",
        "description": "Authentication and an active counter are required.",
        "operationId": "connectCheckInDeviceToActivity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "checkInDeviceId",
            "in": "path",
            "description": "The unique ID of the CheckIn Device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the UUID of the activity to connect the CheckIn Device with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The checkin device was connected successfully.",
            "schema": {
              "$ref": "#/definitions/CheckInDevice"
            }
          },
          "403": {
            "description": "The user is not authenticated or does not have an active counter."
          }
        },
        "tags": [
          "CheckIn devices"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "OAuth",
      "description": "Operations related to authentication with OAuth."
    },
    {
      "name": "User",
      "description": "Operations related to the user."
    },
    {
      "name": "Counter",
      "description": "Operations related to a counter."
    },
    {
      "name": "PassHolder",
      "description": "Operations related to a passholder."
    },
    {
      "name": "Advantage",
      "description": "Operations related to an advantage."
    },
    {
      "name": "Activity",
      "description": "Operations related to an activity."
    },
    {
      "name": "Identity",
      "description": "Operations related to an identity."
    },
    {
      "name": "UiTPAS",
      "description": "Operations related to an UiTPAS."
    },
    {
      "name": "Kansenstatuut",
      "description": "Operations related to a kansenstatuut."
    },
    {
      "name": "CheckIn Devices",
      "description": "Operations related to CheckIn Devices."
    }
  ],
  "definitions": {
    "User": {
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "A universally unique identifier.",
          "example": "6f072ba8-c510-40ac-b387-51f582650e27"
        },
        "preferredLanguage": {
          "type": "string",
          "example": "nl"
        },
        "nick": {
          "type": "string",
          "example": "El Pistolero"
        },
        "password": {
          "type": "string",
          "example": "***"
        },
        "givenName": {
          "type": "string",
          "example": "Alberto"
        },
        "familyName": {
          "type": "string",
          "example": "Contador"
        },
        "mbox": {
          "type": "string",
          "example": "alberto@email.es"
        },
        "mboxVerified": {
          "type": "boolean",
          "example": true
        },
        "gender": {
          "type": "string",
          "example": "male"
        },
        "hasChildren": {
          "type": "boolean",
          "example": false
        },
        "dob": {
          "type": "string",
          "example": "413074800"
        },
        "depiction": {
          "type": "string",
          "example": "//media.uitid.be/fis/rest/download/ce126667652776f0e9e55160f12f5478/uiv/default.png"
        },
        "bio": {
          "type": "string",
          "example": "Alberto Contador is a Spanish professional cyclist, one of six riders to have won all three Grand Tours of road cycling."
        },
        "street": {
          "type": "string",
          "example": "Camino de San Anton"
        },
        "zip": {
          "type": "string",
          "example": 28320
        },
        "city": {
          "type": "string",
          "example": "Madrid"
        },
        "country": {
          "type": "string",
          "example": "Spain"
        },
        "lifestyleProfile": {
          "type": "string",
          "example": "Actieve ontspanner"
        },
        "homeLocation": {
          "$ref": "#/definitions/UserLocation"
        },
        "currentLocation": {
          "$ref": "#/definitions/UserLocation"
        },
        "status": {
          "type": "string",
          "example": "public"
        },
        "points": {
          "type": "string",
          "example": "15"
        },
        "openid": {
          "type": "string"
        },
        "holdsAccount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccountType"
          }
        },
        "privacyConfig": {
          "$ref": "#/definitions/UserPrivacyConfig"
        },
        "pageMemberships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "adminPagesCount": {
          "type": "integer",
          "format": "int32",
          "example": 5
        }
      },
      "required": [
        "id"
      ]
    },
    "UserLocation": {
      "properties": {
        "lat": {
          "type": "number",
          "format": "float",
          "example": "40.2410067"
        },
        "lng": {
          "type": "number",
          "format": "float",
          "example": "-3.688426"
        },
        "radius": {
          "type": "number",
          "format": "float",
          "example": 3.45
        }
      }
    },
    "UserAccountType": {
      "properties": {
        "accountType": {
          "type": "string",
          "example": "google"
        },
        "accountServiceHomepage": {
          "type": "string",
          "example": "http://www.google.com"
        },
        "accountName": {
          "type": "string",
          "example": 101802992566828990000
        },
        "accountNick": {
          "type": "string",
          "example": "El Pistolero"
        },
        "accountDepiction": {
          "type": "string",
          "example": "//media.uitid.be/fis/download/ce126667652776f0e9e55160f12f5478/6e57ac2f-ca1c-460d-9f28-ad7506da7ed1/photo.jpg"
        },
        "private": {
          "type": "boolean",
          "example": true
        },
        "publishActivities": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "UserPrivacyConfig": {
      "properties": {
        "nick": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "givenName": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "familyName": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "mbox": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "gender": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "public"
        },
        "dob": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "public"
        },
        "depiction": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "public"
        },
        "bio": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "public"
        },
        "homeAddress": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "homeLocation": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "currentLocation": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "openid": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        },
        "calendarId": {
          "type": "string",
          "enum": [
            "private",
            "public"
          ],
          "example": "private"
        }
      },
      "required": [
        "nick",
        "givenName",
        "familyName",
        "mbox",
        "gender",
        "dob",
        "depiction",
        "bio",
        "homeAddress",
        "homeLocation",
        "currentLocation",
        "calendarId"
      ]
    },
    "Counter": {
      "properties": {
        "id": {
          "type": "string",
          "example": "390"
        },
        "name": {
          "type": "string",
          "example": "CC De Werf"
        },
        "consumerKey": {
          "type": "string",
          "example": "31413BDF-DFC7-7A9F-10403618C2816E44"
        },
        "role": {
          "type": "string",
          "example": "admin"
        },
        "actorId": {
          "type": "string",
          "example": "31413BDF-DFC7-7A9F-10403618C2816E44"
        },
        "cardSystems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterCardSystem"
          }
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "registration"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Can create passholders for other municipalities"
          }
        }
      },
      "required": [
        "id",
        "consumerKey",
        "name",
        "role",
        "actorId",
        "cardSystems",
        "permissions",
        "groups"
      ]
    },
    "CounterCardSystem": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "registration"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Can create passholders for other municipalities"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "UiTPAS Regio Aalst"
        },
        "distributionKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "permissions",
        "groups",
        "id",
        "name",
        "distributionKeys"
      ]
    },
    "Error": {
      "properties": {
        "type": {
          "type": "string",
          "example": "error"
        },
        "exception": {
          "type": "string",
          "example": "CultuurNet/UiTPASBeheer/Counter/CounterNotSetException"
        },
        "message": {
          "type": "string",
          "example": "No active counter set for the current user."
        },
        "code": {
          "type": "string",
          "example": "COUNTER_NOT_SET",
          "enum": [
            "ACCESS_DENIED",
            "ACTION_FAILED",
            "ACTION_NOT_ALLOWED",
            "BALIE_NOT_ACTOR",
            "BALIE_NOT_AUTHORIZED",
            "CARD_NOT_ASSIGNED_TO_BALIE",
            "CHECKIN_CURRENTLY_NOT_ALLOWED",
            "COUNTER_NOT_SET",
            "EMAIL_ALREADY_USED",
            "INSZ_ALREADY_USED",
            "INVALID_CARD",
            "INVALID_CARD_STATUS",
            "INVALID_CARD_STATUS_BLOCKED",
            "INVALID_CARD_STATUS_DELETED",
            "INVALID_CARD_STATUS_LOCAL_STOCK",
            "INVALID_CARD_STATUS_PROVISIONED",
            "INVALID_CARD_STATUS_SENT_TO_BALIE",
            "INVALID_CARD_STATUS_STOCK",
            "INVALID_DATE_CONSTRAINTS",
            "INVALID_DOB",
            "INVALID_INTERVAL_BEGIN_DATE_AFTER_END_DATE",
            "INVALID_INTERVAL_MIN_HIGHER_THAN_MAX",
            "INVALID_PARAMETERS",
            "INVALID_VOUCHER_STATUS",
            "MAXIMUM_REACHED",
            "MEMBERSHIP_NOT_POSSIBLE_AGE_CONSTRAINT",
            "MISSING_REQUIRED_FIELDS",
            "NO_VALID_DISTRIBUTION_KEY",
            "PARSE_INVALID_BIGDECIMAL",
            "PARSE_INVALID_BOOLEAN",
            "PARSE_INVALID_CITY_NAME",
            "PARSE_INVALID_DATE",
            "PARSE_INVALID_DATE_OF_BIRTH",
            "PARSE_INVALID_GENDER",
            "PARSE_INVALID_INSZ",
            "PARSE_INVALID_UITPASNUMBER",
            "PARSE_INVALID_VOUCHERNUMBER",
            "PASSHOLDER_NO_ACTIVE_CARDSYSTEMS",
            "TICKETSALE_NOT_ALLOWED_FREE_EVENT",
            "UNKNOWN_ASSOCIATION_ID",
            "UNKNOWN_BALIE_CONSUMERKEY",
            "UNKNOWN_BALIE_NAME",
            "UNKNOWN_CARD",
            "UNKNOWN_CARD_SYSTEM",
            "UNKNOWN_CHIPNUMBER",
            "UNKNOWN_CID_CONSUMERKEY",
            "UNKNOWN_EVENT_CDBID",
            "UNKNOWN_PASSHOLDER_UID",
            "UNKNOWN_POINTS_PROMOTION_ID",
            "UNKNOWN_REPORT_ID",
            "UNKNOWN_TICKET_SALE",
            "UNKNOWN_UITPASNUMBER",
            "UNKNOWN_USER",
            "UNKNOWN_VOUCHER",
            "UNKNOWN_WELCOME_ADVANTAGE_ID",
            "USER_ALREADY_ACTIVATED"
          ]
        }
      },
      "required": [
        "type",
        "exception",
        "message",
        "code"
      ]
    },
    "Identity": {
      "properties": {
        "uitPas": {
          "$ref": "#/definitions/UiTPAS"
        },
        "passHolder": {
          "description": "The individual pass holder owning the card. This property is mutually exclusive with 'group'.",
          "$ref": "#/definitions/PassHolder"
        },
        "group": {
          "description": "The group of people owning the card. This property is mutually exclusive with 'passHolder'.",
          "$ref": "#/definitions/Group"
        }
      },
      "required": [
        "uitPas"
      ]
    },
    "UiTPAS": {
      "properties": {
        "number": {
          "type": "string",
          "example": "0930000422202"
        },
        "kansenStatuut": {
          "type": "boolean",
          "example": false
        },
        "status": {
          "type": "string",
          "enum": [
            "LOCAL_STOCK",
            "STOCK",
            "SENT_TO_BALIE",
            "PROVISIONED",
            "ACTIVE",
            "BLOCKED",
            "DELETED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "CARD",
            "KEYCHAIN",
            "STICKER"
          ]
        },
        "cardSystem": {
          "$ref": "#/definitions/CardSystem"
        }
      },
      "required": [
        "number",
        "kansenStatuut",
        "status",
        "type",
        "cardSystem"
      ]
    },
    "Gender": {
      "type": "string",
      "enum": [
        "MALE",
        "FEMALE"
      ]
    },
    "CardSystem": {
      "properties": {
        "id": {
          "type": "string",
          "example": "4a567b89"
        },
        "name": {
          "type": "string",
          "example": "UiTPAS Regio Aalst"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PassHolder": {
      "properties": {
        "name": {
          "$ref": "#/definitions/PassHolderName"
        },
        "address": {
          "$ref": "#/definitions/PassHolderAddress"
        },
        "birth": {
          "$ref": "#/definitions/PassHolderBirthInformation"
        },
        "inszNumber": {
          "type": "string",
          "example": "93051822361"
        },
        "gender": {
          "$ref": "#/definitions/Gender"
        },
        "nationality": {
          "type": "string",
          "example": "Belg"
        },
        "picture": {
          "type": "string",
          "example": "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw=="
        },
        "contact": {
          "$ref": "#/definitions/PassHolderContactInformation"
        },
        "privacy": {
          "$ref": "#/definitions/PassHolderPrivacyPreferences"
        },
        "points": {
          "type": "integer",
          "example": 40
        },
        "remarks": {
          "type": "string",
          "example": "Dit maakt niet uit."
        },
        "kansenStatuten": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KansenStatuut"
          }
        }
      },
      "required": [
        "name",
        "address",
        "birth"
      ]
    },
    "PassHolderUpdateCommand": {
      "properties": {
        "name": {
          "$ref": "#/definitions/PassHolderName"
        },
        "address": {
          "$ref": "#/definitions/PassHolderAddress"
        },
        "birth": {
          "$ref": "#/definitions/PassHolderBirthInformation"
        },
        "inszNumber": {
          "type": "string",
          "example": "93051822361"
        },
        "gender": {
          "$ref": "#/definitions/Gender"
        },
        "nationality": {
          "type": "string",
          "example": "Belg"
        },
        "contact": {
          "$ref": "#/definitions/PassHolderContactInformation"
        },
        "privacy": {
          "$ref": "#/definitions/PassHolderPrivacyPreferences"
        },
        "remarks": {
          "$ref": "#/definitions/PassholderRemarks"
        }
      },
      "required": [
        "name",
        "address",
        "birth"
      ]
    },
    "Group": {
      "properties": {
        "name": {
          "type": "string",
          "example": "Vereniging"
        },
        "availableTickets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "name",
        "availableTickets"
      ]
    },
    "PassHolderCheckinCommand": {
      "properties": {
        "eventCdbid": {
          "$ref": "#/definitions/ActivityId"
        }
      },
      "required": [
        "eventCdbid"
      ]
    },
    "RegisterTicketSaleCommand": {
      "properties": {
        "activityId": {
          "$ref": "#/definitions/ActivityId"
        },
        "priceClass": {
          "$ref": "#/definitions/PriceClass"
        },
        "tariffId": {
          "$ref": "#/definitions/TariffId"
        }
      },
      "required": [
        "activityId",
        "priceClass"
      ]
    },
    "KansenStatuut": {
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "IN_GRACE_PERIOD",
            "EXPIRED"
          ],
          "example": "ACTIVE"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "2015-12-26"
        },
        "cardSystem": {
          "$ref": "#/definitions/CardSystem"
        }
      },
      "required": [
        "endDate"
      ]
    },
    "PassHolderName": {
      "properties": {
        "first": {
          "type": "string",
          "example": "John"
        },
        "middle": {
          "type": "string",
          "example": "Lupus"
        },
        "last": {
          "type": "string",
          "example": "Smith"
        }
      },
      "required": [
        "first",
        "last"
      ]
    },
    "PassHolderAddress": {
      "properties": {
        "street": {
          "type": "string",
          "example": "Steenweg op Aalst 94"
        },
        "postalCode": {
          "type": "string",
          "example": "9308"
        },
        "city": {
          "type": "string",
          "example": "Aalst"
        }
      },
      "required": [
        "postalCode",
        "city"
      ]
    },
    "PassHolderBirthInformation": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "2003-12-26"
        },
        "place": {
          "type": "string",
          "example": "Sint-Agatha-Berchem"
        }
      },
      "required": [
        "date"
      ]
    },
    "PassHolderContactInformation": {
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "foo@bar.com"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "016454545"
        },
        "mobileNumber": {
          "type": "string",
          "example": "+32 498 77 88 99"
        }
      }
    },
    "PassHolderPrivacyPreferences": {
      "properties": {
        "email": {
          "type": "boolean",
          "example": true
        },
        "sms": {
          "type": "boolean",
          "example": false
        }
      },
      "required": [
        "email",
        "sms"
      ]
    },
    "Advantage": {
      "properties": {
        "id": {
          "type": "string",
          "example": "welcome--390"
        },
        "title": {
          "type": "string",
          "example": "Korting op theaterticket."
        },
        "points": {
          "type": "integer",
          "format": "int32",
          "example": 5
        },
        "exchangeable": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "id",
        "title",
        "points",
        "exchangeable"
      ]
    },
    "postObjectWithCounterId": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 390
        }
      },
      "required": [
        "id"
      ]
    },
    "postObjectWithAdvantageId": {
      "properties": {
        "id": {
          "type": "string",
          "example": "points-promotion--2"
        }
      },
      "required": [
        "id"
      ]
    },
    "PagedActivityCollection": {
      "properties": {
        "itemsPerPage": {
          "type": "integer",
          "format": "int32",
          "example": 30
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "example": 3562
        },
        "member": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "firstPage": {
          "type": "string",
          "format": "url",
          "example": "http://culpas-silex.dev/activities?page=1"
        },
        "lastPage": {
          "type": "string",
          "format": "url",
          "example": "http://culpas-silex.dev/activities?page=118"
        },
        "previousPage": {
          "type": "string",
          "format": "url",
          "example": "http://culpas-silex.dev/activities?page=1"
        },
        "nextPage": {
          "type": "string",
          "format": "url",
          "example": "http://culpas-silex.dev/activities?page=3"
        }
      },
      "required": [
        "itemsPerPage",
        "totalItems",
        "member",
        "firstPage",
        "lastPage"
      ]
    },
    "ActivityId": {
      "type": "string",
      "example": "34475f7a-d1d5-481d-b205-9537ae0f9e73"
    },
    "Activity": {
      "properties": {
        "id": {
          "$ref": "#/definitions/ActivityId"
        },
        "title": {
          "type": "string",
          "example": "Fun family time"
        },
        "description": {
          "type": "string",
          "example": "Dit is een testevent dat tijdens de periode 1 september tot en met 31 oktober 2015 zal plaatsvinden. Dit event gaat betalend zijn"
        },
        "when": {
          "type": "string",
          "example": "vanaf 1/9"
        },
        "checkinConstraint": {
          "$ref": "#/definitions/CheckinConstraint"
        },
        "free": {
          "type": "boolean",
          "description": "Indicates whether or not tickets for the activity are free."
        },
        "sales": {
          "$ref": "#/definitions/SalesInformation"
        },
        "points": {
          "type": "integer",
          "description": "The number of points that can be earned when checking in this activity."
        }
      },
      "required": [
        "id",
        "title"
      ]
    },
    "CheckinConstraint": {
      "properties": {
        "allowed": {
          "type": "boolean",
          "description": "Indicates if a user is allowed to check in an activity."
        },
        "startDate": {
          "type": "integer",
          "format": "int32",
          "example": 1438584553,
          "description": "Start date in Unix time."
        },
        "endDate": {
          "type": "integer",
          "format": "int32",
          "example": 1438584553,
          "description": "End date in Unix time."
        },
        "reason": {
          "type": "string",
          "description": "The reason why a user is not allowed to check in an activity.",
          "enum": [
            "MAXIMUM_REACHED",
            "INVALID_DATE_TIME",
            "INVALID_CARD",
            "INVALID_CARD_STATUS",
            "KANSENSTATUUT_EXPIRED",
            "ACTION_FAILED"
          ]
        }
      }
    },
    "Registration": {
      "properties": {
        "passHolder": {
          "$ref": "#/definitions/PassHolder"
        },
        "voucherNumber": {
          "type": "string",
          "description": "An optional voucher number to redeem."
        },
        "kansenStatuut": {
          "$ref": "#/definitions/RegistrationKansenStatuut"
        }
      },
      "required": [
        "passHolder"
      ]
    },
    "RegistrationKansenStatuut": {
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the kansenstatuut."
        },
        "remarks": {
          "$ref": "#/definitions/PassholderRemarks"
        }
      },
      "required": [
        "endDate"
      ]
    },
    "UiTPASPrice": {
      "properties": {
        "price": {
          "type": "number",
          "format": "float",
          "description": "The UiTPAS price in cents."
        },
        "kansenStatuut": {
          "type": "boolean",
          "description": "Whether or not this price is available for people with a kansenstatuut."
        },
        "ageRange": {
          "$ref": "#/definitions/AgeRange"
        },
        "voucherType": {
          "$ref": "#/definitions/VoucherType"
        }
      },
      "required": [
        "price",
        "kansenStatuut",
        "ageRange"
      ]
    },
    "AgeRange": {
      "properties": {
        "from": {
          "type": "integer"
        },
        "to": {
          "type": "integer"
        }
      }
    },
    "VoucherType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the voucher."
        },
        "prefix": {
          "type": "string",
          "description": "A prefix that can used to validate the voucher type."
        }
      },
      "required": [
        "name",
        "prefix"
      ]
    },
    "SalesInformation": {
      "properties": {
        "maximumReached": {
          "type": "boolean",
          "description": "Indicates whether or not the total maximum of ticket sales has been reached."
        },
        "differentiation": {
          "type": "boolean",
          "description": "Indicates whether or not there is price differentiation."
        },
        "base": {
          "type": "object",
          "description": "Object with price classes as properties, and base prices as their values.",
          "additionalProperties": {
            "$ref": "#/definitions/Price"
          },
          "example": {
            "Rang 1": 10.5,
            "Rang 2": 7.5,
            "Rang 3+": 5
          }
        },
        "tariffs": {
          "$ref": "#/definitions/Tariffs"
        }
      },
      "required": [
        "maximumReached",
        "differentiation",
        "base"
      ]
    },
    "Tariffs": {
      "properties": {
        "lowestAvailable": {
          "type": "number",
          "format": "float",
          "description": "Lowest available tariff.",
          "example": 3.5
        },
        "kansentariefAvailable": {
          "type": "boolean",
          "description": "Whether or not kansentarief is available."
        },
        "couponAvailable": {
          "type": "boolean",
          "description": "Whether or not at least one coupon is available."
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tariff"
          }
        }
      }
    },
    "Tariff": {
      "properties": {
        "id": {
          "$ref": "#/definitions/TariffId"
        },
        "maximumReached": {
          "type": "boolean",
          "description": "Indicates whether or not the maximum of ticket sales for this tariff has been reached."
        },
        "name": {
          "type": "string",
          "description": "Name of the tarif.",
          "example": "Kansentarief"
        },
        "type": {
          "type": "string",
          "enum": [
            "KANSENTARIEF",
            "COUPON"
          ]
        },
        "prices": {
          "type": "object",
          "description": "Object with price classes as properties, and tariff prices as their values.",
          "additionalProperties": {
            "$ref": "#/definitions/Price"
          },
          "example": {
            "Rang 1": 10.5,
            "Rang 2": 7.5,
            "Rang 3+": 5
          }
        }
      },
      "required": [
        "maximumReached",
        "name",
        "type",
        "prices"
      ]
    },
    "TariffId": {
      "type": "string",
      "description": "Id of the tariff.",
      "example": "10"
    },
    "PriceClass": {
      "type": "string",
      "example": "Rang 1"
    },
    "TicketSale": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "30819"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "price",
        "creationDate"
      ]
    },
    "KansenstatuutUpdateCommand": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "2015-12-26"
        }
      },
      "required": [
        "endDate"
      ]
    },
    "Price": {
      "type": "number",
      "format": "float",
      "example": 1.5
    },
    "PassholderRemarks": {
      "type": "string",
      "description": "Addition information about the passholder. Kansenstatuut related info should go here."
    },
    "CheckInDevice": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the CheckIn Device.",
          "example": "516a0d124281f1275e41f7755b82243f"
        },
        "name": {
          "type": "string",
          "description": "Human readable name of the CheckIn Device.",
          "example": "CID031-RPI"
        },
        "activityId": {
          "$ref": "#/definitions/ActivityId",
          "description": "Activity to which the CheckIn Device is currently connected."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "ConnectActivity": {
      "properties": {
        "activityId": {
          "$ref": "#/definitions/ActivityId",
          "description": "Activity to connect the CheckIn Device to."
        }
      },
      "required": [
        "activityId"
      ]
    }
  }
}
